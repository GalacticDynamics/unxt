name: CI

permissions:
  contents: read
  packages: read

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  # Many color libraries just need this to be set to any value, but at least
  # one distinguishes color depth, where "3" -> "256-bit color".
  FORCE_COLOR: 3

jobs:
  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - uses: pre-commit/action@v3.0.1

      - name: Run PyLint
        run: uv run --group nox nox -s pylint -- --output-format=github

  checks:
    name: Check Python ${{ matrix.python-version }} on ${{ matrix.runs-on }}
    runs-on: ${{ matrix.runs-on }}
    needs: [format]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
        runs-on: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Test package
        run: >-
          uv run --group test pytest src docs tests -ra --cov --cov-report=xml
          --cov-report=term --durations=20

      - name: Upload coverage report
        uses: codecov/codecov-action@v5.4.3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  check_oldest:
    name: Check Oldest Dependencies
    runs-on: ${{ matrix.runs-on }}
    needs: [format]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]
        runs-on: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Test package
        run: >-
          uv run --extra all --group test-all --resolution lowest-direct pytest
          --cov --cov-report=xml --cov-report=term --durations=20 --mpl

      - name: Upload coverage report
        uses: codecov/codecov-action@v5.4.3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  check_interop:
    name: Check Interoperability
    runs-on: ${{ matrix.runs-on }}
    needs: [format]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
        runs-on: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Test package
        run: >-
          uv run --extra all --group test-all pytest --cov --cov-report=xml
          --cov-report=term --durations=20 --mpl

      - name: Upload coverage report
        uses: codecov/codecov-action@v5.4.3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  benchmark:
    name: Run Benchmarks
    runs-on: ubuntu-24.04
    needs: [format]
    if:
      github.event_name == 'workflow_dispatch' || (github.event_name ==
      'pull_request' && contains(github.event.pull_request.labels.*.name,
      'run-benchmarks')) || (github.event_name == 'push' && github.ref ==
      'refs/heads/main')
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Run benchmarks
        uses: CodSpeedHQ/action@v3
        with:
          token: ${{ secrets.CODSPEED_TOKEN }}
          run: uv run --group test pytest tests/benchmark --codspeed
