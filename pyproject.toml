[build-system]
  build-backend = "hatchling.build"
  requires = ["hatchling", "hatch-vcs"]


[project]
  authors = [
    { name = "Nathaniel Starkman", email = "nstarman@users.noreply.github.com" },
  ]
  classifiers = [
    "Development Status :: 1 - Planning",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Typing :: Typed",
  ]
  dependencies = [
    "quaxed >= 0.4",
    "astropy>=6.0",
    "equinox>0.11",
    "jax>0.4",
    "jaxlib",
    "jaxtyping",
    "quax>=0.0.3",
  ]
  description = "Quantities in JAX"
  dynamic = ["version"]
  license.file = "LICENSE"
  name = "unxt"
  readme = "README.md"
  requires-python = ">=3.10"

  [project.optional-dependencies]
    all = ["unxt[docs]", "unxt[dev]", "unxt[test]"]
    dev = ["unxt[test]"]
    docs = [
      "sphinx>=7.0",
      "myst_parser>=0.13",
      "sphinx_copybutton",
      "sphinx_autodoc_typehints",
      "furo>=2023.08.17",
    ]
    test = [
      "hypothesis[numpy]",
      "pytest >=6,<8",
      "pytest-cov >=3",
      "pytest-arraydiff",
      "sybil",
    ]

  [project.urls]
    "Bug Tracker" = "https://github.com/GalacticDynamics/unxt/issues"
    Changelog = "https://github.com/GalacticDynamics/unxt/releases"
    Discussions = "https://github.com/GalacticDynamics/unxt/discussions"
    Homepage = "https://github.com/GalacticDynamics/unxt"


[tool.hatch]
  build.hooks.vcs.version-file = "src/unxt/_version.py"
  metadata.allow-direct-references = true
  version.source = "vcs"


  [tool.hatch.env.default]
    features = ["test"]
    scripts.test = "pytest {args}"


[tool.pytest.ini_options]
  addopts = [
    "-ra",
    "-p no:doctest",  # using sybil
    "--arraydiff",
    "--showlocals",
    "--strict-markers",
    "--strict-config",
  ]
  filterwarnings = [
    "error",
    "ignore:ast\\.Str is deprecated and will be removed in Python 3\\.14:DeprecationWarning",
  ]
  log_cli_level = "INFO"
  minversion = "6.0"
  testpaths = ["tests/", "docs", "src/"]
  xfail_strict = true


[tool.coverage]
  report.exclude_also = ['\.\.\.', 'if typing.TYPE_CHECKING:']
  run.source = ["unxt"]

[tool.mypy]
  disallow_incomplete_defs = false
  disallow_untyped_defs = false
  enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
  files = ["src", "tests"]
  python_version = "3.10"
  strict = true
  warn_return_any = false
  warn_unreachable = true
  warn_unused_configs = true

  [[tool.mypy.overrides]]
    disable_error_code = ["type-arg", "name-defined"]
    disallow_incomplete_defs = true
    disallow_untyped_defs = true
    module = "unxt.*"

  [[tool.mypy.overrides]]
    ignore_missing_imports = true
    module = [
      "array_api.*",
      "quaxed.*",
      "astropy.*",
      "equinox.*",
      "hypothesis.*",
      "jax.*",
      "unxt.*",
      "jaxtyping.*",
      "numpy.*",
      "quax.*",
    ]


[tool.ruff]
  src = ["src"]

  [tool.ruff.lint]
    extend-select = ["ALL"]
    ignore = [
      "A002",    # Argument is shadowing a Python builtin
      "ANN101",  # Missing type annotation for `self` in method
      "ANN102",  # Missing type annotation for `cls` in method
      "ANN401",  # Dynamically typed expressions (typing.Any) are disallowed
      "ARG001",  # Unused function argument  # TODO: resolve
      "COM812",  # <- for ruff.format
      "D103",    # Missing docstring in public function  # TODO: resolve
      "D105",    # Missing docstring in magic method
      "D107",    # Missing docstring in __init__
      "D203",    # 1 blank line required before class docstring
      "D213",    # Multi-line docstring summary should start at the second line
      "ERA001",  # Commented out code
      "F722",    # Syntax error in forward annotation <- jaxtyping
      "F811",    # redefinition of unused '...'  <- plum-dispatch
      "F821",    # undefined name '...'  <- jaxtyping
      "FIX002",  # Line contains TODO
      "ISC001",  # Conflicts with formatter
      "PD",      # Pandas
      "PLR09",   # Too many <...>
      "PLR2004", # Magic value used in comparison
      "PYI041",  # Use `complex` instead of `int | complex` <- plum is more strict
      "TD002",   # Missing author in TODO
      "TD003",   # Missing issue link on the line following this TODO
    ]
    # Uncomment if using a _compat.typing backport
    # typing-modules = ["unxt._compat.typing"]

    [tool.ruff.lint.per-file-ignores]
      "__init__.py" = ["F403"]
      "docs/conf.py" = ["A001", "INP001"]
      "noxfile.py" = ["T20"]
      "tests/**" = ["ANN", "S101", "T20"]

    [tool.ruff.lint.isort]
      combine-as-imports = true
      known-first-party = ["quaxed"]
      known-local-folder = ["unxt"]


[tool.pylint]
  ignore-paths = [".*/_version.py", ".*/_compat.py"]
  messages_control.disable = [
    "design",
    "fixme",
    "function-redefined",         # plum-dispatch
    "invalid-name",               # handled by ruff
    "line-too-long",
    "missing-function-docstring", # TODO: resolve
    "missing-module-docstring",
    "not-callable",               # handled by mypy
    "property-with-parameters",   # handled by ruff
    "protected-access",           # handled by ruff
    "redefined-builtin",          # handled by ruff
    "unused-argument",            # handled by ruff
    "wrong-import-order",         # handled by ruff
    "wrong-import-position",
  ]
  py-version = "3.10"
  reports.output-format = "colorized"
  similarities.ignore-imports = "yes"
